<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_finite_state_machine_8h" kind="file" language="C++">
    <compoundname>FiniteStateMachine.h</compoundname>
    <includes local="no">set</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">vector</includes>
    <includes local="no">array</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">source_location</includes>
    <includes local="no">functional</includes>
    <includes local="no">concepts</includes>
    <includes local="yes">utility/Logger.h</includes>
    <includedby refid="_d_f_a_8h" local="yes">C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/include/fsm/DFA.h</includedby>
    <includedby refid="_n_f_a_8h" local="yes">C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/include/fsm/NFA.h</includedby>
    <includedby refid="_finite_state_machine_8cpp" local="yes">C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/src/FiniteStateMachine.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/include/fsm/FiniteStateMachine.h</label>
        <link refid="_finite_state_machine_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="10">
        <label>concepts</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>set</label>
      </node>
      <node id="8">
        <label>source_location</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="3">
        <label>unordered_set</label>
      </node>
      <node id="11">
        <label>utility/Logger.h</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/include/fsm/DFA.h</label>
        <link refid="_d_f_a_8h"/>
      </node>
      <node id="1">
        <label>C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/include/fsm/FiniteStateMachine.h</label>
        <link refid="_finite_state_machine_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/include/fsm/NFA.h</label>
        <link refid="_n_f_a_8h"/>
      </node>
      <node id="4">
        <label>C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/src/FiniteStateMachine.cpp</label>
        <link refid="_finite_state_machine_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structm0st4fa_1_1fsm_1_1_invalid_state_machine_arguments_exception" prot="public">m0st4fa::fsm::InvalidStateMachineArgumentsException</innerclass>
    <innerclass refid="structm0st4fa_1_1fsm_1_1_unrecognized_sim_mode_exception" prot="public">m0st4fa::fsm::UnrecognizedSimModeException</innerclass>
    <innerclass refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" prot="public">m0st4fa::fsm::FSMStateSetType</innerclass>
    <innerclass refid="classm0st4fa_1_1fsm_1_1_f_s_m_table" prot="public">m0st4fa::fsm::FSMTable</innerclass>
    <innerclass refid="classm0st4fa_1_1fsm_1_1_transition_function" prot="public">m0st4fa::fsm::TransitionFunction</innerclass>
    <innerclass refid="classm0st4fa_1_1fsm_1_1_finite_state_machine" prot="public">m0st4fa::fsm::FiniteStateMachine</innerclass>
    <innerclass refid="structm0st4fa_1_1fsm_1_1_indicies" prot="public">m0st4fa::fsm::Indicies</innerclass>
    <innerclass refid="structm0st4fa_1_1fsm_1_1_f_s_m_result" prot="public">m0st4fa::fsm::FSMResult</innerclass>
    <innerclass refid="structm0st4fa_1_1fsm_1_1_substring" prot="public">m0st4fa::fsm::Substring</innerclass>
    <innerconcept refid="conceptm0st4fa_1_1fsm_1_1_state_set_concept">m0st4fa::fsm::StateSetConcept</innerconcept>
    <innernamespace refid="namespacem0st4fa">m0st4fa</innernamespace>
    <innernamespace refid="namespacem0st4fa_1_1fsm">m0st4fa::fsm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;source_location&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;concepts&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utility/Logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXCEPTION<sp/>TYPES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacem0st4fa_1_1fsm" kindref="compound">m0st4fa::fsm</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="structm0st4fa_1_1fsm_1_1_invalid_state_machine_arguments_exception" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_invalid_state_machine_arguments_exception" kindref="compound">InvalidStateMachineArgumentsException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::invalid_argument<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structm0st4fa_1_1fsm_1_1_invalid_state_machine_arguments_exception_1a5a170c84b3dc1577c3807db2c32516f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_invalid_state_machine_arguments_exception_1a5a170c84b3dc1577c3807db2c32516f6" kindref="member">InvalidStateMachineArgumentsException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message)<sp/>:<sp/>std::invalid_argument{<sp/>message}<sp/>{};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structm0st4fa_1_1fsm_1_1_unrecognized_sim_mode_exception" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_unrecognized_sim_mode_exception" kindref="compound">UnrecognizedSimModeException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structm0st4fa_1_1fsm_1_1_unrecognized_sim_mode_exception_1acbd34a04f3833e511ef34c29538a2fea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_unrecognized_sim_mode_exception_1acbd34a04f3833e511ef34c29538a2fea" kindref="member">UnrecognizedSimModeException</ref>()<sp/>:<sp/>std::runtime_error{<sp/></highlight><highlight class="stringliteral">&quot;Unrecognized<sp/>mode<sp/>give<sp/>to<sp/>`simulate()`<sp/>function.&quot;</highlight><highlight class="normal">}<sp/>{};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TYPE<sp/>ALIASES<sp/>AND<sp/>CONCEPTS<sp/>(AND<sp/>A<sp/>RELATED<sp/>STRUCT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacem0st4fa_1_1fsm" kindref="compound">m0st4fa::fsm</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="namespacem0st4fa_1_1fsm_1adea900ebd34b3b5d62931d51d398268d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classunsigned" kindref="compound">FSMStateType</ref><sp/>=<sp/><ref refid="classunsigned" kindref="compound">unsigned</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/>{</highlight></codeline>
<codeline lineno="52" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a78740339539c2ec760bab5d9323fac55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a78740339539c2ec760bab5d9323fac55" kindref="member">SetType</ref><sp/>=<sp/>std::set&lt;FSMStateType&gt;;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a78740339539c2ec760bab5d9323fac55" kindref="member">SetType</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a9848175a8ef89be1a0798bec055469f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a9848175a8ef89be1a0798bec055469f1" kindref="member">FSMStateSetType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::initializer_list&lt;FSMStateType&gt;&amp;<sp/>i)<sp/>:<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>{<sp/>i<sp/>}<sp/>{};</highlight></codeline>
<codeline lineno="59" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1af9199f3a30f900726ce4f27895c97e63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1af9199f3a30f900726ce4f27895c97e63" kindref="member">FSMStateSetType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a78740339539c2ec760bab5d9323fac55" kindref="member">SetType</ref>&amp;<sp/>set)<sp/>:<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>{<sp/>set<sp/>}<sp/>{};</highlight></codeline>
<codeline lineno="60" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ae4e6f579bc8a1422a36d995301b8d54b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ae4e6f579bc8a1422a36d995301b8d54b" kindref="member">FSMStateSetType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref><sp/>state)<sp/>:<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>{<sp/>state<sp/>}<sp/>{};</highlight></codeline>
<codeline lineno="61" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a7d887bbbf71c14e64fd9506e32b2b58c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a7d887bbbf71c14e64fd9506e32b2b58c" kindref="member">FSMStateSetType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CONVERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1abacd525f90f37cba548462386f4b0048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a78740339539c2ec760bab5d9323fac55" kindref="member">SetType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a84c587127e8f8fc4771e07b0f3410618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="namespacem0st4fa_1_1fsm_1adea900ebd34b3b5d62931d51d398268d" kindref="member">FSMStateType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a22812a634242303fadc3ebb54bbd5732" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref>{};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*this-&gt;<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1aabf7cc7baa5c6e1a289fa4e635466cac" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MODIFIERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIt&gt;</highlight></codeline>
<codeline lineno="77" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a63aacc1726d7c7d22805708b5e2a1fef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a63aacc1726d7c7d22805708b5e2a1fef" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputIt<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1aabf7cc7baa5c6e1a289fa4e635466cac" kindref="member">begin</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputIt<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a992bc9289d334ffd6b5ce4af99dea260" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.insert(<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1aabf7cc7baa5c6e1a289fa4e635466cac" kindref="member">begin</ref>,<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a992bc9289d334ffd6b5ce4af99dea260" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ac3aad4876f6af5a0a3988c20fea45e76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ac3aad4876f6af5a0a3988c20fea45e76" kindref="member">insert</ref>(std::initializer_list&lt;FSMStateType&gt;<sp/>ilist)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.insert(ilist);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a2456dd7bf60d88d1a4cc2b728d277a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a2456dd7bf60d88d1a4cc2b728d277a53" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.insert(state);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a8121a3136c906a176d4009e0c513f990" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a8121a3136c906a176d4009e0c513f990" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_StateSet<sp/>=<sp/>rhs.<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ITERATORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1aabf7cc7baa5c6e1a289fa4e635466cac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetType::iterator<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1aabf7cc7baa5c6e1a289fa4e635466cac" kindref="member">begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.begin();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a992bc9289d334ffd6b5ce4af99dea260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetType::iterator<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a992bc9289d334ffd6b5ce4af99dea260" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.end();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a567ef13b459e0202112bfe8974650fcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetType::iterator<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a567ef13b459e0202112bfe8974650fcb" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.begin();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a07bf2897d5b6b4b29ba64b0c443d0e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetType::iterator<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a07bf2897d5b6b4b29ba64b0c443d0e5f" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.end();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LOOKUP<sp/>AND<sp/>CAPACITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ab37c773c0c059b360dd43536ab8d5517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ab37c773c0c059b360dd43536ab8d5517" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref><sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.contains(val);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ac0b0973f8f618caa79fdd26f61cf7d74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ac0b0973f8f618caa79fdd26f61cf7d74" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.size();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112" refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a22812a634242303fadc3ebb54bbd5732" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a22812a634242303fadc3ebb54bbd5732" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a3f10fca503993f250915fbe6a297dd92" kindref="member">m_StateSet</ref>.empty();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="namespacem0st4fa_1_1fsm_1a9daf74accff16baed24fc902eaf5e0d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classunsigned" kindref="compound">FlagsType</ref><sp/>=<sp/><ref refid="classunsigned" kindref="compound">unsigned</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="namespacem0st4fa_1_1fsm_1af46ab8df7db57ffc5e7a7492a473a981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespacem0st4fa_1_1fsm_1af46ab8df7db57ffc5e7a7492a473a981" kindref="member">IndexType</ref><sp/>=<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="131" refid="conceptm0st4fa_1_1fsm_1_1_state_set_concept" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">concept<sp/></highlight><highlight class="normal"><ref refid="conceptm0st4fa_1_1fsm_1_1_state_set_concept" kindref="compound">StateSetConcept</ref><sp/>=<sp/>std::is_same_v&lt;T,<sp/>FSMStateSetType&gt;<sp/>||<sp/>std::is_same_v&lt;T,<sp/>std::vector&lt;FSMStateType&gt;&gt;;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;StateSetConcept<sp/>T&gt;</highlight></codeline>
<codeline lineno="134" refid="namespacem0st4fa_1_1fsm_1aefb70e7de357a6d1fbb8f603f12f30c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespacem0st4fa_1_1fsm_1aefb70e7de357a6d1fbb8f603f12f30c3" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>set)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>set<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set.empty())<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>temp<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;{<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>std::to_string(*set.begin());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>:<sp/>set)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>*set.begin())</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(s));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>temp;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ENUMERATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacem0st4fa_1_1fsm" kindref="compound">m0st4fa::fsm</ref><sp/>{</highlight></codeline>
<codeline lineno="170" refid="namespacem0st4fa_1_1fsm_1ae49367e23837069e9faaefcb6a0406f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacem0st4fa_1_1fsm_1ae49367e23837069e9faaefcb6a0406f1" kindref="member">FSM_MODE</ref><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1ae49367e23837069e9faaefcb6a0406f1ab7ffe915b99112ed2c95e0f8d917073a" kindref="member">MM_WHOLE_STRING</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1ae49367e23837069e9faaefcb6a0406f1a456b958363273312579a7e97e12c0294" kindref="member">MM_LONGEST_PREFIX</ref>,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1ae49367e23837069e9faaefcb6a0406f1a9857ed071b6970f381b4163b30f857fb" kindref="member">MM_LONGEST_SUBSTRING</ref>,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1ae49367e23837069e9faaefcb6a0406f1a64c00db69df99cf1af465a96444b53e6" kindref="member">MM_NONE</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1ae49367e23837069e9faaefcb6a0406f1ad2bf4503b44b6e829bc1077125163c78" kindref="member">MM_FSM_MODE_COUNT</ref>,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8" kindref="member">FSM_TYPE</ref><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8ac672dfcbdcdb9eb98050cbb825150697" kindref="member">MT_EPSILON_NFA</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8affb7f31d80464bd8892f51e554fb7aaa" kindref="member">MT_NON_EPSILON_NFA</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8afc791e61adbabe19e3c5fc01607034fc" kindref="member">MT_DFA</ref>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8aa3712c2dc4c9d906dfe5f99e6d6c6dc0" kindref="member">MT_MACHINE_TYPE_COUNT</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="namespacem0st4fa_1_1fsm_1ac882d30363c8730a12932c6982256f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacem0st4fa_1_1fsm_1ac882d30363c8730a12932c6982256f66" kindref="member">FSM_FLAG</ref><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FF_CASE_INSENSITIVE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FF_CASE_SENSITIVE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="namespacem0st4fa_1_1fsm_1ac882d30363c8730a12932c6982256f66a300a280a834c4bc1ba1ffeb70870653b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1ac882d30363c8730a12932c6982256f66a300a280a834c4bc1ba1ffeb70870653b" kindref="member">FF_FLAG_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1ac882d30363c8730a12932c6982256f66a938e7282bc27f546851a6b2ff94ac0d0" kindref="member">FF_FLAG_COUNT</ref></highlight></codeline>
<codeline lineno="223" refid="namespacem0st4fa_1_1fsm_1ac882d30363c8730a12932c6982256f66a938e7282bc27f546851a6b2ff94ac0d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CLASSES<sp/>&amp;<sp/>STRUCTURES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacem0st4fa_1_1fsm" kindref="compound">m0st4fa::fsm</ref><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table" kindref="compound">FSMTable</ref><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1ae9bfdd99c86b8df168548e8e9c7ef69b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1ae9bfdd99c86b8df168548e8e9c7ef69b" kindref="member">StateSetVecType</ref><sp/>=<sp/>std::vector&lt;FSMStateSetType&gt;;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1aa84482bc61cd333d73910d11ed09833d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1aa84482bc61cd333d73910d11ed09833d" kindref="member">VecType</ref><sp/>=<sp/>std::vector&lt;StateSetVecType&gt;;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a3afaa1400079ec91b37e4960a43d6277" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a3afaa1400079ec91b37e4960a43d6277" kindref="member">ItType</ref><sp/>=<sp/>VecType::iterator;</highlight></codeline>
<codeline lineno="251" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1af2f03acb111ee609e564d570de20924e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1af2f03acb111ee609e564d570de20924e" kindref="member">ConstItType</ref><sp/>=<sp/>VecType::const_iterator;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1aa84482bc61cd333d73910d11ed09833d" kindref="member">VecType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT<sp/>=<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="265" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a135992cf3ca358040702ff9cb96636c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a135992cf3ca358040702ff9cb96636c5" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref>&amp;<sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputT<sp/>input)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.size()<sp/>&lt;=<sp/>state)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.resize(state<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FSMStateSetType&gt;&amp;<sp/>stateMap<sp/>=<sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.at(state);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateMap.size()<sp/>&lt;=<sp/>input)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateMap.resize(input<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stateMap.at(input);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT<sp/>=<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="285" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1aa981f90a53f2581c8c22dd014afdd890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1aa981f90a53f2581c8c22dd014afdd890" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref>&amp;<sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputT<sp/>input)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.size()<sp/>&lt;=<sp/>state)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.resize(state<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;FSMStateSetType&gt;&amp;<sp/>stateMap<sp/>=<sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.at(state);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateMap.size()<sp/>&lt;=<sp/>input)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateMap.resize(input<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Impossible<sp/>to<sp/>throw<sp/>an<sp/>exception,<sp/>as<sp/>sizes<sp/>of<sp/>both<sp/>dimensions<sp/>have<sp/>been<sp/>already<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stateMap.at(input);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a7eb9660e0d7d0f5974a3bfe63ec7ce1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1ae9bfdd99c86b8df168548e8e9c7ef69b" kindref="member">StateSetVecType</ref>&amp;<sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a7eb9660e0d7d0f5974a3bfe63ec7ce1f" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref>&amp;<sp/>state)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.size()<sp/>&lt;=<sp/>state)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.resize(state<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.at(state);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a46eb51b992c62d2381b1572f7ff2bc08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1ae9bfdd99c86b8df168548e8e9c7ef69b" kindref="member">StateSetVecType</ref>&amp;<sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a46eb51b992c62d2381b1572f7ff2bc08" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref>&amp;<sp/>state)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.size()<sp/>&lt;=<sp/>state)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.resize(state<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.at(state);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a3422a5e824a8846ead118ccf5c0b480d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a3afaa1400079ec91b37e4960a43d6277" kindref="member">ItType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a3422a5e824a8846ead118ccf5c0b480d" kindref="member">begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.begin();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1aa4f2c335065b9f3f7a90551b04cef593" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1af2f03acb111ee609e564d570de20924e" kindref="member">ConstItType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1aa4f2c335065b9f3f7a90551b04cef593" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.begin();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a2039e60157041a49b7c3e940302afed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a3afaa1400079ec91b37e4960a43d6277" kindref="member">ItType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1a2039e60157041a49b7c3e940302afed9" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.end();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334" refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1af61b479b44e3bc7ce1b4e9e5bfecaf7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1af2f03acb111ee609e564d570de20924e" kindref="member">ConstItType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1af61b479b44e3bc7ce1b4e9e5bfecaf7d" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_f_s_m_table_1acbcd21b2e498df96e3d8fd5343028e4d" kindref="member">m_Table</ref>.end();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TableT<sp/>=<sp/>FSMTable&gt;</highlight></codeline>
<codeline lineno="345" refid="classm0st4fa_1_1fsm_1_1_transition_function" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_transition_function" kindref="compound">TransitionFunction</ref><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classm0st4fa_1_1fsm_1_1_transition_function_1a07efae944582638386ef88f6505f7719" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableT<sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1a07efae944582638386ef88f6505f7719" kindref="member">m_Table</ref>{};</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350" refid="classm0st4fa_1_1fsm_1_1_transition_function_1a77fc8dcfa6d5e5c902326fe5b749e62c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1a77fc8dcfa6d5e5c902326fe5b749e62c" kindref="member">TransitionFunction</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351" refid="classm0st4fa_1_1fsm_1_1_transition_function_1aaf9b768b1a8deaa3e85d000a785d56fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1aaf9b768b1a8deaa3e85d000a785d56fd" kindref="member">TransitionFunction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableT&amp;<sp/>table)<sp/>:<sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1a07efae944582638386ef88f6505f7719" kindref="member">m_Table</ref>(table)<sp/>{}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT&gt;</highlight></codeline>
<codeline lineno="360" refid="classm0st4fa_1_1fsm_1_1_transition_function_1af4bc04818c9126c07305732a6b9108d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1af4bc04818c9126c07305732a6b9108d7" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref>&amp;<sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputT<sp/>c)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1a07efae944582638386ef88f6505f7719" kindref="member">m_Table</ref>(state,<sp/>c);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT&gt;</highlight></codeline>
<codeline lineno="371" refid="classm0st4fa_1_1fsm_1_1_transition_function_1a77884de4b07f532c78f5f9bb1d01a657" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1a77884de4b07f532c78f5f9bb1d01a657" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref><sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputT<sp/>input)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1a07efae944582638386ef88f6505f7719" kindref="member">m_Table</ref>(state,<sp/>input);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT&gt;</highlight></codeline>
<codeline lineno="383" refid="classm0st4fa_1_1fsm_1_1_transition_function_1aa9d32801e9136d2f048bc08d72cb3b8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1aa9d32801e9136d2f048bc08d72cb3b8e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/>stateSet,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputT<sp/>input)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/>res;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classunsigned" kindref="compound">FSMStateType</ref><sp/>state<sp/>:<sp/>stateSet)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/>tmp<sp/>=<sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function_1a07efae944582638386ef88f6505f7719" kindref="member">m_Table</ref>(state,<sp/>input);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a63aacc1726d7c7d22805708b5e2a1fef" kindref="member">insert</ref>(tmp.<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1aabf7cc7baa5c6e1a289fa4e635466cac" kindref="member">begin</ref>(),<sp/>tmp.<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a992bc9289d334ffd6b5ce4af99dea260" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TableT<sp/>=<sp/>FSMTable&gt;</highlight></codeline>
<codeline lineno="397" refid="namespacem0st4fa_1_1fsm_1a4e9d8b9b5da9a0cabd309b6c89074ede" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_transition_function" kindref="compound">TransFn</ref><sp/>=<sp/><ref refid="classm0st4fa_1_1fsm_1_1_transition_function" kindref="compound">TransitionFunction&lt;TableT&gt;</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result" kindref="compound">FSMResult</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespacem0st4fa_1_1fsm_1aefb70e7de357a6d1fbb8f603f12f30c3" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::ostream&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result" kindref="compound">FSMResult</ref>&amp;);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TransFuncT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputT<sp/>=<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">_view&gt;</highlight></codeline>
<codeline lineno="407" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine" kindref="compound">FiniteStateMachine</ref><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>friends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a93bbc0499903ffa2d78306b08a687146" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result" kindref="compound">FSMResult</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>instance<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a671dac4b92a9737963fc11d80c790d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a671dac4b92a9737963fc11d80c790d65" kindref="member">m_FinalStates</ref>{};</highlight></codeline>
<codeline lineno="414" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a6298a230a79036e1079049ae415c8d0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8" kindref="member">FSM_TYPE</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a6298a230a79036e1079049ae415c8d0d" kindref="member">m_MachineType</ref>;</highlight></codeline>
<codeline lineno="415" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a4c3312d267bd2288d28965078a9329a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classunsigned" kindref="compound">FlagsType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a4c3312d267bd2288d28965078a9329a2" kindref="member">m_Flags</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a5155c91b2dcd709e41f2845e79d1e1fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_logger" kindref="compound">Logger</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a5155c91b2dcd709e41f2845e79d1e1fd" kindref="member">m_Logger</ref>;</highlight></codeline>
<codeline lineno="422" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a0c61563a5042149aeaf6b0b06b6b37f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_trans_func_t" kindref="compound">TransFuncT</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a0c61563a5042149aeaf6b0b06b6b37f8" kindref="member">m_TransitionFunc</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a605a16645ce198a8a571ac2e3ddb4a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a605a16645ce198a8a571ac2e3ddb4a5e" kindref="member">_is_state_final</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/>state)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="431"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>:<sp/>state)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1af27589cf2239dd94d87f252effb43f84" kindref="member">getFinalStates</ref>().<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ab37c773c0c059b360dd43536ab8d5517" kindref="member">contains</ref>(s))</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a7d866f7d6701ce070aae3f0a88b47047" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a7d866f7d6701ce070aae3f0a88b47047" kindref="member">_get_final_states_from_state_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/>state)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="446"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/>finalStates;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>:<sp/>state)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1af27589cf2239dd94d87f252effb43f84" kindref="member">getFinalStates</ref>().<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1ab37c773c0c059b360dd43536ab8d5517" kindref="member">contains</ref>(s))</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalStates.<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a63aacc1726d7c7d22805708b5e2a1fef" kindref="member">insert</ref>(s);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finalStates;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static</highlight></codeline>
<codeline lineno="458" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1af5fa6501d388a47f8625a9af2fa1205c" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="classunsigned" kindref="compound">FSMStateType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1af5fa6501d388a47f8625a9af2fa1205c" kindref="member">START_STATE</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="462" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a247d21b7b8a25f7a75b3d3444cd8a9c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a247d21b7b8a25f7a75b3d3444cd8a9c0" kindref="member">FiniteStateMachine</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a6cc82307f218ab8bd807751dcd9f13d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a6cc82307f218ab8bd807751dcd9f13d0" kindref="member">FiniteStateMachine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/>fStates,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_trans_func_t" kindref="compound">TransFuncT</ref>&amp;<sp/>tranFn,<sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8" kindref="member">FSM_TYPE</ref><sp/>machineType<sp/>,<ref refid="classunsigned" kindref="compound">FlagsType</ref><sp/>flags)<sp/>:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a671dac4b92a9737963fc11d80c790d65" kindref="member">m_FinalStates</ref><sp/>{<sp/>fStates<sp/>},<sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a0c61563a5042149aeaf6b0b06b6b37f8" kindref="member">m_TransitionFunc</ref>{<sp/>tranFn<sp/>},<sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a6298a230a79036e1079049ae415c8d0d" kindref="member">m_MachineType</ref><sp/>{machineType},<sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a4c3312d267bd2288d28965078a9329a2" kindref="member">m_Flags</ref>{flags}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fStates.<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type_1a22812a634242303fadc3ebb54bbd5732" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FSM:<sp/>The<sp/>set<sp/>of<sp/>final<sp/>states<sp/>cannot<sp/>be<sp/>empty.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a5155c91b2dcd709e41f2845e79d1e1fd" kindref="member">m_Logger</ref>.log(LoggerInfo::ERROR,<sp/>message);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_invalid_state_machine_arguments_exception" kindref="compound">InvalidStateMachineArgumentsException</ref>{<sp/>message<sp/>};</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(machineType<sp/>==<sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8aa3712c2dc4c9d906dfe5f99e6d6c6dc0" kindref="member">FSM_TYPE::MT_MACHINE_TYPE_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>message<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;(FSM:<sp/>The<sp/>machine<sp/>type<sp/>is<sp/>invalid.)&quot;;</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a5155c91b2dcd709e41f2845e79d1e1fd" kindref="member">m_Logger</ref>.log(LoggerInfo::ERROR,<sp/>message);</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_invalid_state_machine_arguments_exception" kindref="compound">InvalidStateMachineArgumentsException</ref>{<sp/>message<sp/>};</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a379192050bd13f35664b5960ea465c80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine" kindref="compound">FiniteStateMachine</ref>&amp;<sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a379192050bd13f35664b5960ea465c80" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine" kindref="compound">FiniteStateMachine</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_TransitionFunc<sp/>=<sp/>rhs.<ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a0c61563a5042149aeaf6b0b06b6b37f8" kindref="member">m_TransitionFunc</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_Flags<sp/>=<sp/>rhs.<ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a4c3312d267bd2288d28965078a9329a2" kindref="member">m_Flags</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_MachineType<sp/>=<sp/>rhs.<ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a6298a230a79036e1079049ae415c8d0d" kindref="member">m_MachineType</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a671dac4b92a9737963fc11d80c790d65" kindref="member">m_FinalStates</ref><sp/>=<sp/>rhs.<ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a671dac4b92a9737963fc11d80c790d65" kindref="member">m_FinalStates</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1af27589cf2239dd94d87f252effb43f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref>&amp;<sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1af27589cf2239dd94d87f252effb43f84" kindref="member">getFinalStates</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a671dac4b92a9737963fc11d80c790d65" kindref="member">m_FinalStates</ref>;<sp/>};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1aeeb4b2093840ab12624d034be708fc10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classunsigned" kindref="compound">FlagsType</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1aeeb4b2093840ab12624d034be708fc10" kindref="member">getFlags</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a4c3312d267bd2288d28965078a9329a2" kindref="member">m_Flags</ref>;<sp/>};</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1adcd2de25e74e415309594a6dddd23d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1a824af687b77ebbcb14e1051fb902b1d8" kindref="member">FSM_TYPE</ref><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1adcd2de25e74e415309594a6dddd23d51" kindref="member">getMachineType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine_1a6298a230a79036e1079049ae415c8d0d" kindref="member">m_MachineType</ref>;<sp/>};</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="structm0st4fa_1_1fsm_1_1_indicies" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_indicies" kindref="compound">Indicies</ref><sp/>{</highlight></codeline>
<codeline lineno="520" refid="structm0st4fa_1_1fsm_1_1_indicies_1a244dd51885862adac586860d18f2a9fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1af46ab8df7db57ffc5e7a7492a473a981" kindref="member">IndexType</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a244dd51885862adac586860d18f2a9fa" kindref="member">start</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="524" refid="structm0st4fa_1_1fsm_1_1_indicies_1a66006d44d1326899a7e14bfe36498ffd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacem0st4fa_1_1fsm_1af46ab8df7db57ffc5e7a7492a473a981" kindref="member">IndexType</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a66006d44d1326899a7e14bfe36498ffd" kindref="member">end</ref><sp/>=<sp/>0;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="structm0st4fa_1_1fsm_1_1_indicies_1a6ab215105f13a60b58bbd392d04e0d81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>std::string()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a3ec257112bde0040cc6a49856e601f97" kindref="member">toString</ref>();</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535" refid="structm0st4fa_1_1fsm_1_1_indicies_1a3ec257112bde0040cc6a49856e601f97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a3ec257112bde0040cc6a49856e601f97" kindref="member">toString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::format(</highlight><highlight class="stringliteral">&quot;({},<sp/>{})&quot;</highlight><highlight class="normal">,<sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a244dd51885862adac586860d18f2a9fa" kindref="member">start</ref>,<sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a66006d44d1326899a7e14bfe36498ffd" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="structm0st4fa_1_1fsm_1_1_indicies_1aa74a944fe6a4ab2a13be462ee3ffa57b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1aa74a944fe6a4ab2a13be462ee3ffa57b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies" kindref="compound">Indicies</ref>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="structm0st4fa_1_1fsm_1_1_indicies_1a7eb8e35dfd03b5a3be1eafa0a7a9d377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies" kindref="compound">Indicies</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a7eb8e35dfd03b5a3be1eafa0a7a9d377" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies" kindref="compound">Indicies</ref>{<sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a244dd51885862adac586860d18f2a9fa" kindref="member">start</ref><sp/>+<sp/>num,<sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a66006d44d1326899a7e14bfe36498ffd" kindref="member">end</ref><sp/>+<sp/>num<sp/>};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result" kindref="compound">FSMResult</ref><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DATA<sp/>MEMBERS<sp/>AND<sp/>NESTED<sp/>TYPES</highlight></codeline>
<codeline lineno="563" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a2d5ad097cea8fc385dc07e1276942075" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a2d5ad097cea8fc385dc07e1276942075" kindref="member">accepted</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a9db79a6b95ea47d708e9354c03249762" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_state_set_type" kindref="compound">FSMStateSetType</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a9db79a6b95ea47d708e9354c03249762" kindref="member">finalState</ref><sp/>=<sp/>{<sp/><ref refid="classm0st4fa_1_1fsm_1_1_finite_state_machine" kindref="compound">FiniteStateMachine&lt;FSMStateType&gt;::START_STATE</ref><sp/>};</highlight></codeline>
<codeline lineno="571" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a85f305cf097f34b6714ea8fe081623db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies" kindref="compound">Indicies</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a85f305cf097f34b6714ea8fe081623db" kindref="member">indicies</ref>;</highlight></codeline>
<codeline lineno="575" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1aa10fe4132da299e6ebe6eada766b9619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string_view<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1aa10fe4132da299e6ebe6eada766b9619" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UTILITY<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="581" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a433f5f04aed023bf63e62013d2d2c93a" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a433f5f04aed023bf63e62013d2d2c93a" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a85f305cf097f34b6714ea8fe081623db" kindref="member">indicies</ref>.<ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a66006d44d1326899a7e14bfe36498ffd" kindref="member">end</ref><sp/>-<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a85f305cf097f34b6714ea8fe081623db" kindref="member">indicies</ref>.<ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a244dd51885862adac586860d18f2a9fa" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a42f01e27fddd5cc5ab139685bb383243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a42f01e27fddd5cc5ab139685bb383243" kindref="member">getMatch</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;input.substr(<ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a85f305cf097f34b6714ea8fe081623db" kindref="member">indicies</ref>.<ref refid="structm0st4fa_1_1fsm_1_1_indicies_1a244dd51885862adac586860d18f2a9fa" kindref="member">start</ref>,<sp/>this-&gt;size());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593" refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1ac8f3b2adfdbcb7d26cbac9d801183ce2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies" kindref="compound">Indicies</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1ac8f3b2adfdbcb7d26cbac9d801183ce2" kindref="member">getIndecies</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_f_s_m_result_1a85f305cf097f34b6714ea8fe081623db" kindref="member">indicies</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>FSMStateType&gt;</highlight></codeline>
<codeline lineno="603" refid="structm0st4fa_1_1fsm_1_1_substring" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structm0st4fa_1_1fsm_1_1_substring" kindref="compound">Substring</ref><sp/>{</highlight></codeline>
<codeline lineno="607" refid="structm0st4fa_1_1fsm_1_1_substring_1a1c2c176f54b01b75afa2a46408d290ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a1c2c176f54b01b75afa2a46408d290ef" kindref="member">matchedStates</ref>;</highlight></codeline>
<codeline lineno="611" refid="structm0st4fa_1_1fsm_1_1_substring_1a8c1557f5a490aa868a11435ccdac5674" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structm0st4fa_1_1fsm_1_1_indicies" kindref="compound">Indicies</ref><sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a8c1557f5a490aa868a11435ccdac5674" kindref="member">indicies</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="structm0st4fa_1_1fsm_1_1_substring_1a3aa809e4abcef2f3014be74bb6717769" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a3aa809e4abcef2f3014be74bb6717769" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a1c2c176f54b01b75afa2a46408d290ef" kindref="member">matchedStates</ref>.begin();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622" refid="structm0st4fa_1_1fsm_1_1_substring_1a521f425072d2254087543c705e37474c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a521f425072d2254087543c705e37474c" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a1c2c176f54b01b75afa2a46408d290ef" kindref="member">matchedStates</ref>.end();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="structm0st4fa_1_1fsm_1_1_substring_1a1cef219ef9c89c06006236ffeccd7149" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a1cef219ef9c89c06006236ffeccd7149" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structm0st4fa_1_1fsm_1_1_substring_1a1c2c176f54b01b75afa2a46408d290ef" kindref="member">matchedStates</ref>.size();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/mosta/Desktop/Projects/Programming/SDKs/FSM/include/fsm/FiniteStateMachine.h"/>
  </compounddef>
</doxygen>
